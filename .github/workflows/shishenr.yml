name: Build All RustDesk Clients

on:
  workflow_dispatch:
    inputs:
      upload-artifact:
        type: boolean
        default: true
      upload-tag:
        type: string
        default: "nightly"

env:
  # 统一工具链版本
  RUST_VERSION: "1.83"           # 主 Rust 版本
  MAC_RUST_VERSION: "1.83"       # macOS 专用 Rust 版本
  LLVM_VERSION: "15.0.6"
  FLUTTER_VERSION: "3.24.5"
  ANDROID_NDK_VERSION: "r27c"
  VCPKG_COMMIT_ID: "6f29f12e82a8293156836ad81cc9bf5af41fe836"
  
  # 构建参数
  VERSION: "1.3.9"
  SIGN_BASE_URL: "${{ secrets.SIGN_BASE_URL }}"
  ANDROID_SIGNING_KEY: "${{ secrets.ANDROID_SIGNING_KEY }}"
  MACOS_P12_BASE64: "${{ secrets.MACOS_P12_BASE64 }}"

jobs:
  # 公共前置任务
  generate-bridge:
    uses: ./.github/workflows/bridge.yml

  build-RustDeskTempTopMostWindow:
    uses: ./.github/workflows/third-party-RustDeskTempTopMostWindow.yml
    with:
      upload-artifact: ${{ inputs.upload-artifact }}
      target: windows-2022
      configuration: Release
      platform: x64
      target_version: Windows10

  # Windows Flutter 构建
  build-for-windows-flutter:
    name: Windows (x86_64)
    needs: [build-RustDeskTempTopMostWindow, generate-bridge]
    runs-on: windows-2022
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: recursive

      # 从 natfrp.yml 迁移的核心步骤
      - name: Replace Flutter Engine
        run: |
          Invoke-WebRequest -Uri https://github.com/rustdesk/engine/releases/download/main/windows-x64-release.zip -OutFile windows-x64-release.zip
          Expand-Archive -Path windows-x64-release.zip -DestinationPath windows-x64-release
          mv -Force windows-x64-release/* C:/hostedtoolcache/windows/flutter/stable-${{ env.FLUTTER_VERSION }}-x64/bin/cache/artifacts/engine/windows-x64-release/

      - name: Install Rust
        uses: dtolnay/rust-toolchain@v1
        with:
          toolchain: ${{ env.RUST_VERSION }}
          targets: x86_64-pc-windows-msvc
          components: "rustfmt"

      - name: Build RustDesk
        run: python3 .\build.py --portable --hwcodec --flutter --vram --skip-portable-pack

      - name: Package Windows Installer
        run: |
          pushd ./res/msi
          python preprocess.py --arp -d ../../rustdesk
          msbuild msi.sln -p:Configuration=Release -p:Platform=x64
          mv ./Package/bin/x64/Release/en-us/Package.msi ../../SignOutput/rustdesk-${{ env.VERSION }}-x86_64.msi

      - name: Upload Artifacts
        uses: actions/upload-artifact@master
        with:
          name: rustdesk-windows-x64
          path: |
            ./SignOutput/rustdesk-*.msi
            ./SignOutput/rustdesk-*.exe

  # macOS 构建
  build-for-macOS:
    name: macOS (ARM64/x86_64)
    runs-on: ${{ matrix.os }}
    needs: [generate-bridge]
    strategy:
      matrix:
        os: [macos-13, macos-latest]
        arch: [aarch64, x86_64]
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: recursive

      - name: Install Rust
        uses: dtolnay/rust-toolchain@v1
        with:
          toolchain: ${{ env.MAC_RUST_VERSION }}
          targets: ${{ matrix.arch }}-apple-darwin

      - name: Build and Sign
        run: |
          ./build.py --flutter --hwcodec --unix-file-copy-paste
          create-dmg --icon "RustDesk.app" 200 190 rustdesk-${{ env.VERSION }}-${{ matrix.arch }}.dmg ./flutter/build/macos/Build/Products/Release/RustDesk.app

      - name: Upload DMG
        uses: actions/upload-artifact@master
        with:
          name: rustdesk-macos-${{ matrix.arch }}
          path: rustdesk-${{ env.VERSION }}-${{ matrix.arch }}.dmg

  # Android 构建
  build-rustdesk-android:
    name: Android (ARM64/x86_64)
    runs-on: ubuntu-22.04
    needs: [generate-bridge]
    strategy:
      matrix:
        target: [aarch64-linux-android, x86_64-linux-android]
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: recursive

      - name: Setup NDK
        uses: nttld/setup-ndk@v1
        with:
          ndk-version: ${{ env.ANDROID_NDK_VERSION }}

      - name: Build APK
        run: |
          ./flutter/build_android_deps.sh
          flutter build apk --release --target-platform android-arm64 --split-per-abi

      - name: Sign APK
        uses: r0adkll/sign-android-release@v1
        with:
          signingKeyBase64: ${{ secrets.ANDROID_SIGNING_KEY }}
          alias: ${{ secrets.ANDROID_ALIAS }}

      - name: Upload APK
        uses: actions/upload-artifact@master
        with:
          name: rustdesk-android-${{ matrix.target }}
          path: build/app/outputs/apk/release/app-*-release.apk

  # Linux 构建
  build-rustdesk-linux:
    name: Linux (x86_64/ARM64)
    runs-on: ${{ matrix.os }}
    needs: [generate-bridge]
    strategy:
      matrix:
        os: [ubuntu-20.04, ubuntu-22.04-arm]
        arch: [x86_64, aarch64]
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: recursive

      - name: Build DEB/RPM
        run: |
          ./build.py --flutter --hwcodec
          cargo deb --target ${{ matrix.arch }}-unknown-linux-gnu

      - name: Upload Packages
        uses: actions/upload-artifact@master
        with:
          name: rustdesk-linux-${{ matrix.arch }}
          path: target/debian/*.deb

  # iOS 构建（需自托管Runner）
  build-rustdesk-ios:
    name: iOS (ARM64)
    runs-on: [self-hosted, macOS]
    needs: [generate-bridge]
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: recursive

      - name: Build IPA
        run: |
          flutter build ipa --release --no-codesign
          xcodebuild -exportArchive -archivePath Runner.xcarchive -exportOptionsPlist ExportOptions.plist -exportPath .

      - name: Upload IPA
        uses: actions/upload-artifact@master
        with:
          name: rustdesk-ios
          path: *.ipa
